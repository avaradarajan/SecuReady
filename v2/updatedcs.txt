var activeForm = null
var pageType = null
var userNameElement = null
var passwordElement = null
window.onload=function() {
   console.log(document.domain);
   console.log(activeForm)
};
$(function() {
domainName = document.domain
console.log("Every damn time---------------------------------------------")
var allForms = document.querySelectorAll("form")
var formsWithPasswordField = null
for(i=0;i<allForms.length;i++)
{
    formsWithPasswordField = allForms[i].querySelectorAll("input[type='password']")
    console.log(formsWithPasswordField.length)
    if(formsWithPasswordField.length == 2)
    {
        activeForm = allForms[i]
        break;
    }
    else if(formsWithPasswordField.length == 1)
    {
        activeForm = allForms[i]
    }
}
var allInputFieldsInActiveForm = activeForm.querySelectorAll("input:not([type='hidden'])")
if(allInputFieldsInActiveForm.length<=3)
{
  pageType = "login"
}
else if(allInputFieldsInActiveForm.length>3)
{
  pageType = "signup"
}
console.log(activeForm)
console.log(pageType)
for(i=0;i<allInputFieldsInActiveForm.length;i++)
{
  if(allInputFieldsInActiveForm[i].getAttribute("type") == "password")
  {
    userNameElement = allInputFieldsInActiveForm[i-1]
    passwordElement = allInputFieldsInActiveForm[i]
    break;
  }
}
console.log(userNameElement)
console.log(passwordElement)
var submitButton = activeForm.querySelector("input[type='submit']")
activeForm.addEventListener('submit', storeCredentials.bind(this,userNameElement,passwordElement,pageType,true));
passwordElement.addEventListener('blur', useCase1Check.bind(this,userNameElement,passwordElement,pageType));
//document.body.addEventListener('DOMSubtreeModified', function () {
//}, false);
})

function storeCredentials(userName,password,page,storeOption,event)
{
  chrome.runtime.sendMessage({todo : "storeCreds", un:userName.value, pswd:password.value, url:document.domain, pt:page, store:storeOption},
  function(response) {})

}
function useCase1Check(userName,password,page,event) {
  console.log("---------------Content script onsubmit")
  //event.preventDefault();
  textContent = `Form Submitted! Time stamp: ${event.timeStamp}`;
  console.log(userName.value)
  console.log(password.value)
  console.log(document.domain)
  console.log(activeForm)
  console.log("-------------------------------------")
  var resp = null
  chrome.runtime.sendMessage({todo : "checkLogic", un:userName.value, pswd:password.value, url:document.domain, pt:page},
  function(response) {
  resp = response.result
    console.log(response.result);
    if(response.result==0)
    {
        swal({
            title: "You are saved!!",
            text: "You are already using this password for another website. Please use a different password!!",
            icon: "warning",
        });
    }
   }
   )
  /*if(password.value == "h"){

    $(activeForm).submit()}
  else
    return false;*/
}

chrome.extension.onMessage.addListener(function(msg, sender, sendResponse) {
  if (msg.action == 'warn') {
  swal({
    title: "Uh oh!!",
    text: " Looks like you are already using the password for some other site. Please use a different password everytime!",
    icon: "warning",
  });
  }//if
});














var usernameNameAttribute = null
var passwordNameAttribute = null
var usernameValue = null
var passwordValue = null
var redirectURL = null
var domainName = null
var msg = null
var lStorage = window.localStorage
var storeVal = null
var pageType = null
var useCase = null
chrome.runtime.onMessage.addListener(function(request,sender,sendResponse){
usernameValue = request.un
passwordValue = request.pswd
pageType = request.pt
domainName = request.url
storeVal = request.store
if(storeVal && pageType== "signup")
{
    console.log("Storing block-----")
    var store = {
         username:usernameValue,
         password:passwordValue
    }
    lStorage.setItem(domainName,JSON.stringify(store))
}
if (pageType == "signup")
{
        useCase = 0
        storeVal = true
        Object.keys(lStorage).forEach(function(key){
        record = JSON.parse(lStorage.getItem(key))
        console.log(record)
        if(passwordValue == record.password)//retrieve the stored passwords
          {
            storeVal = false
          }
      });
      if(storeVal)
        useCase = 1
      console.log(useCase)
      sendResponse({result: useCase});
}
console.log(useCase)
return true;
})